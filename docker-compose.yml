version: '3.7'

services:

  mediscreen-angular-ui:
    image: mediscreen-angular-ui:0.0.1
    depends_on:
      - mediscreen-patient
    ports:
      - "4200:4200"
    networks: 
      - backend
    
  mediscreen-patient:
    image: mediscreen-patient:0.0.1
    depends_on:
     - postgresqldb
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresqldb:5432/mediscreen
    ports:
      - "9010:9010"
    networks: 
      - backend

  postgresqldb:
    image: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "adm_mediscreen" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    ports:
      - "5432"
    environment:
      - POSTGRES_PASSWORD=medi
      - POSTGRES_USER=adm_mediscreen
      - POSTGRES_DB=mediscreen
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
      - data:/var/lib/postgresql/data
    networks: 
      - backend

  mediscreen-note:
    image: mediscreen-note:0.0.1
    depends_on:
     - mongodb
     - mediscreen-patient
    environment:
      #- SPRING_DATA_MONGODB_HOST=mongodb
      #- SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/noteDb
    ports:
      - "9011:9011"
    networks: 
      - backend
   
  mongodb:
    image: mongo:4
    container_name: mongodb
    ports: 
        - 27017:27017
    volumes: 
        - mongo-volume:/data/db
    networks: 
        - backend

volumes:
    data:
    mongo-volume:

networks:
  backend:
    driver: "bridge"
